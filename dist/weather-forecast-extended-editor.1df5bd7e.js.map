{"mappings":"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","sources":["src/editor/weather-forecast-extended-editor.ts"],"sourcesContent":["import { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport type { HomeAssistant, LovelaceCardEditor } from \"custom-card-helpers\";\nimport type { WeatherForecastExtendedConfig } from \"../types\";\n\ntype HaFormSelector =\n  | { entity: { domain?: string } }\n  | { boolean: {} }\n  | { text: {} }\n  | { select: { options: Array<{ value: string; label: string }> } };\n\ntype HaFormSchema = {\n  name: keyof WeatherForecastExtendedConfig | \"entity\" | \"name\" | \"hourly_forecast\" | \"daily_forecast\";\n  selector: HaFormSelector;\n  optional?: boolean;\n};\n\nconst fireEvent = (node: HTMLElement, type: string, detail?: unknown) => {\n  node.dispatchEvent(new CustomEvent(type, { detail, bubbles: true, composed: true }));\n};\n\n@customElement(\"weather-forecast-extended-editor\")\nexport class WeatherForecastExtendedEditor extends LitElement implements LovelaceCardEditor {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _config?: WeatherForecastExtendedConfig;\n\n  static styles = css`\n    .sun-section {\n      margin-top: 16px;\n      display: flex;\n      flex-direction: column;\n      gap: 8px;\n    }\n\n    .sun-section h4 {\n      margin: 0;\n      font-size: 16px;\n      font-weight: 600;\n    }\n\n    .sun-option {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      font-size: 14px;\n    }\n\n    .sun-option input[type=\"checkbox\"] {\n      width: 18px;\n      height: 18px;\n    }\n\n    .sun-option span {\n      flex: 1;\n    }\n\n    .sun-coordinates {\n      display: flex;\n      gap: 12px;\n      flex-wrap: wrap;\n    }\n\n    .sun-field {\n      display: flex;\n      flex: 1 1 120px;\n      flex-direction: column;\n      gap: 4px;\n      font-size: 14px;\n    }\n\n    .sun-field input {\n      font: inherit;\n      padding: 6px 8px;\n      border-radius: 4px;\n      border: 1px solid var(--divider-color, rgba(0, 0, 0, 0.12));\n      background: var(--ha-card-background, #fff);\n      color: var(--primary-text-color);\n    }\n\n    .sun-field input:disabled {\n      opacity: 0.6;\n    }\n  `;\n\n  private readonly _schema: HaFormSchema[] = [\n    { name: \"entity\", selector: { entity: { domain: \"weather\" } } },\n    { name: \"name\", selector: { text: {} }, optional: true },\n    { name: \"hourly_forecast\", selector: { boolean: {} } },\n    { name: \"daily_forecast\", selector: { boolean: {} } },\n    {\n      name: \"orientation\",\n      selector: {\n        select: {\n          options: [\n            { value: \"vertical\", label: \"Vertical\" },\n            { value: \"horizontal\", label: \"Horizontal\" },\n          ],\n        },\n      },\n      optional: true,\n    },\n  ];\n\n  public setConfig(config: WeatherForecastExtendedConfig): void {\n    this._config = {\n      type: \"custom:weather-forecast-extended-card\",\n      ...config,\n      hourly_forecast: config.hourly_forecast ?? true,\n      daily_forecast: config.daily_forecast ?? true,\n      orientation: config.orientation ?? \"vertical\",\n    };\n  }\n\n  protected render() {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${this._schema}\n        .computeLabel=${this._computeLabel}\n        @value-changed=${this._handleValueChanged}\n      ></ha-form>\n      <div class=\"sun-section\">\n        <h4>Sunrise & Sunset</h4>\n        <label class=\"sun-option\">\n          <input\n            type=\"checkbox\"\n            name=\"show_sun_times\"\n            .checked=${this._config.show_sun_times ?? false}\n            @change=${this._handleSunToggleChange}\n          />\n          <span>Show sunrise & sunset</span>\n        </label>\n        ${this._config.show_sun_times\n          ? html`\n            <label class=\"sun-option\">\n              <input\n                type=\"checkbox\"\n                name=\"sun_use_home_coordinates\"\n                .checked=${this._config.sun_use_home_coordinates ?? true}\n                @change=${this._handleSunToggleChange}\n              />\n              <span>Use Home Assistant location</span>\n            </label>\n            <div class=\"sun-coordinates\">\n              <label class=\"sun-field\">\n                <span>Latitude</span>\n                <input\n                  type=\"text\"\n                  name=\"sun_latitude\"\n                  placeholder=\"e.g. 48.137\"\n                  .value=${String(this._config.sun_latitude ?? \"\")}\n                  ?disabled=${this._config.sun_use_home_coordinates ?? true}\n                  @input=${this._handleSunInputChange}\n                />\n              </label>\n              <label class=\"sun-field\">\n                <span>Longitude</span>\n                <input\n                  type=\"text\"\n                  name=\"sun_longitude\"\n                  placeholder=\"e.g. 11.575\"\n                  .value=${String(this._config.sun_longitude ?? \"\")}\n                  ?disabled=${this._config.sun_use_home_coordinates ?? true}\n                  @input=${this._handleSunInputChange}\n                />\n              </label>\n            </div>\n          `\n          : nothing}\n      </div>\n    `;\n  }\n\n  private _handleValueChanged(event: CustomEvent<{ value: Partial<WeatherForecastExtendedConfig> }>) {\n    event.stopPropagation();\n    this._updateConfig(event.detail.value);\n  }\n\n  private _computeLabel = (schema: HaFormSchema) => {\n    if (!this.hass) {\n      return schema.name;\n    }\n\n    switch (schema.name) {\n      case \"entity\":\n        return this.hass.localize(\"ui.panel.lovelace.editor.card.generic.entity\");\n      case \"name\":\n        return this.hass.localize(\"ui.panel.lovelace.editor.card.generic.name\");\n      case \"hourly_forecast\":\n        return this.hass.localize(\"ui.panel.lovelace.editor.card.weather.show_forecast_hourly\") || \"Show hourly forecast\";\n      case \"daily_forecast\":\n        return this.hass.localize(\"ui.panel.lovelace.editor.card.weather.show_forecast_daily\") || \"Show daily forecast\";\n      case \"orientation\":\n        return this.hass.localize(\"ui.panel.lovelace.editor.card.generic.orientation\") || \"Orientation\";\n      default:\n        return schema.name;\n    }\n  };\n\n  private _handleSunToggleChange(event: Event) {\n    const target = event.currentTarget as HTMLInputElement | null;\n    if (!target) {\n      return;\n    }\n    const key = target.name as keyof WeatherForecastExtendedConfig;\n    this._updateConfig({ [key]: target.checked } as Partial<WeatherForecastExtendedConfig>);\n  }\n\n  private _handleSunInputChange(event: Event) {\n    const target = event.currentTarget as HTMLInputElement | null;\n    if (!target) {\n      return;\n    }\n    const key = target.name as keyof WeatherForecastExtendedConfig;\n    const value = target.value.trim();\n    const update: Partial<WeatherForecastExtendedConfig> = {};\n    (update as any)[key] = value === \"\" ? undefined : value;\n    this._updateConfig(update);\n  }\n\n  private _updateConfig(changes: Partial<WeatherForecastExtendedConfig>) {\n    if (!this._config) {\n      return;\n    }\n\n    const updated: WeatherForecastExtendedConfig = {\n      ...this._config,\n      ...changes,\n      type: \"custom:weather-forecast-extended-card\",\n    };\n\n    if (!updated.name) {\n      delete (updated as Partial<WeatherForecastExtendedConfig>).name;\n    }\n\n    this._config = updated;\n    fireEvent(this, \"config-changed\", { config: updated });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"weather-forecast-extended-editor\": WeatherForecastExtendedEditor;\n  }\n}\n"],"names":[],"version":3,"file":"weather-forecast-extended-editor.1df5bd7e.js.map"}